@model PandoLogic.Controllers.WorkItemViewModel

@{
    ViewBag.Title = "Create Task";
    ViewBag.TitleMinor = "";

    if (ViewBag.Goal != null)
    {
        ViewBag.Breadcrumb = new Breadcrumb(new Crumb[] {
        new Crumb("Dashboard", Url.Action("Index","Home"), "fa-dashboard"),
        new Crumb("Goals", Url.Action("Index","Goals"), "fa-check"),
        new Crumb("Goal Details", Url.Action("Details","Goals", new { id = ViewBag.Goal.Id}), ""),
        new Crumb("Create Task")
    });
    }
    else
    {
        ViewBag.Breadcrumb = new Breadcrumb(new Crumb[] {
        new Crumb("Dashboard", Url.Action("Index","Home"), "fa-dashboard"),
        new Crumb("Goals", Url.Action("Index","Goals"), "fa-check"),
        new Crumb("Create Task")
    });
    }


}

<div class="row">
    <div class="col-md-6">
        <div class="box box-primary">
            <div class="box-header">
                <h3 class="box-title">
                    Create Task
                    @if (ViewBag.Goal != null)
                    {
                        <span>For Goal</span>
                    }
                </h3>
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()



                if (ViewBag.Goal != null)
                {
                    @Html.Hidden("GoalId", (int)ViewBag.Goal.Id)
                    <div class="callout callout-info">
                        <h4>@ViewBag.Goal.Title</h4>
                        @ViewBag.Goal.Description
                    </div>
                }

                <div class="box-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Title) } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Description) } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AssigneeId, "Assignee", htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.DropDownList("AssigneeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AssigneeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DueDateString, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.DueDateString, new { htmlAttributes = new { @class = "form-control date-mask", placeholder = Html.DisplayNameFor(model => model.DueDateString) } })
                            @Html.ValidationMessageFor(model => model.DueDateString, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="box-footer">
                        <button type="submit" class="btn btn-primary">Create Task</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/plugins/input-mask/jquery.inputmask.js"></script>
    <script src="~/Scripts/plugins/input-mask/jquery.inputmask.date.extensions.js"></script>
    <script src="~/Scripts/plugins/input-mask/jquery.inputmask.extensions.js"></script>
    <script type="text/javascript">
        $(function () {
            $(".date-mask").inputmask("mm/dd/yyyy", { "placeholder": "mm/dd/yyyy" });
        });
    </script>
}