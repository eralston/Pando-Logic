@using PandoLogic.Models
@model IEnumerable<Goal>

@{
    DateTime now = DateTime.Now;
}

<div class="box box-primary">
    <div class="box-header">

        @if (ViewBag.GoalBoxShowAllUrl == null)
        {
            <h3 class="box-title">
                Goals
            </h3>
        }
        else
        {
            <a href="@ViewBag.GoalBoxShowAllUrl">
                <h3 class="box-title force-a">
                    Goals
                </h3>
            </a>
        }

    </div>
    <div class="box-body">
        <div>
            @Html.ActionLink("Create New Goal", "Create", "Goals", null, new { @class = "btn btn-default" })
        </div>
    </div>
    <div class="box-body no-padding">

        <div class="table-responsive">
            <table class="table table-condensed">
                <tbody>
                    <tr>
                        <th>Title</th>
                        <th>Due Date</th>
                        <th>Progress</th>
                    </tr>

                    @foreach (Goal goal in Model)
                    {
                        <tr>
                            <td>
                                <a href="@Url.Action("Details", "Goals", new { id = goal.Id })">
                                    <i class="fa @goal.Icon @goal.IconClass"></i>
                                    @goal.Title
                                </a>
                            </td>
                            <td>
                                @if (goal.ArchiveDate.HasValue)
                                {
                                    <span>Archived on @goal.ArchiveDate.Value.ToString("d")</span>
                                }
                                else
                                {
                                    if (goal.DueDate < now)
                                    {
                                        <i class="fa fa-warning" title="This task is overdue"></i>
                                    }

                                    if (goal.DueDate.HasValue)
                                    {
                                        <span>@goal.DueDate.Value.ToString("d")</span>
                                    }
                                    else
                                    {
                                        <span>Unassigned</span>
                                    }
                                }
                            </td>



                            <td>
                                <div class="progress sm active bg-red">
                                    <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="@goal.CalculateProgress()" aria-valuemin="0" aria-valuemax="100" style="width: @goal.CalculateProgress()%">
                                        <span class="sr-only">@goal.CalculateProgress()% Complete</span>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                    @{
                        bool? showAll = ViewBag.GoalBoxShowAll;
                    }
                    @if (showAll.HasValue && showAll.Value)
                    {
                        string goalBoxTitle = ViewBag.GoalBoxShowAllTitle ?? "Show All";
                        <tr>
                            <td colspan="3" class="text-center">
                                <a href="@ViewBag.GoalBoxShowAllUrl">
                                    @goalBoxTitle
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

